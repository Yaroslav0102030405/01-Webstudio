{"version":3,"file":"static/js/971.03e73b8f.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = undefined;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const noop = (any) => any;\n\nexport { noop };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","e","r","t","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","canHandoff","window","HandoffAppearAnimations","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","noop","any","Queue","_classCallCheck","this","order","scheduled","_createClass","process","add","index","splice","delete","clear","stepsOrder","_createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","steps","reduce","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","queue","cancel","remove","frameData","createRenderStep","processStep","stepId","processBatch","performance","now","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","frame","cancelFrame","svgMotionConfig","read","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","_info$values","tokenised","_toConsumableArray","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","collectMotionValues","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getPropertyValue","trimmed","resolveCSSVariables","TypeError","_objectDestructuringEmpty","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}